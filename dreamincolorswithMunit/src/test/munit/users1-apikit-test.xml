<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="users1-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="get:\users\(ID):users1-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\(ID):users1-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="get:\users\(ID):users1-config" />
        </munit:enable-flow-sources>
        <munit:execution>
			<set-payload value="#[payload]" doc:name="Set Payload" doc:id="f856f368-e637-44a6-bae6-91a90ded319c" />
        </munit:execution>
        <munit:validation>
            <flow-ref doc:name="Flow Reference" doc:id="9aeeaa1b-66ec-4885-9b36-b8e7da8ed203" name="get:\users\(ID):users1-config"/>
			<munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" doc:id="e8dc0c94-d5fd-436a-a137-eec0174f58e4"/>
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\(ID):users1-config-400-application\json-FlowTest" description="Verifying functionality of [get:\users\(ID):users1-config-400-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="get:\users\(ID):users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="ID" value="#['null']" doc:name="ID" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/$(vars.ID)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_400_users_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:users1-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users:users1-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="get:\users:users1-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:users1-config-404-application\json-FlowTest" description="Verifying functionality of [get:\users:users1-config-404-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="get:\users:users1-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="404" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(404)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 404" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_404_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:users1-config-500-application\json-FlowTest" description="Verifying functionality of [get:\users:users1-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="get:\users:users1-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_500_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\users\(ID):application\json:users1-config-200-application\json-FlowTest" description="Verifying functionality of [delete:\users\(ID):application\json:users1-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="delete:\users\(ID):application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="ID" value="#['null']" doc:name="ID" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/users/$(vars.ID)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_200_users_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\users\(ID):application\json:users1-config-401-application\json-FlowTest" description="Verifying functionality of [delete:\users\(ID):application\json:users1-config-401-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="delete:\users\(ID):application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="ID" value="#['null']" doc:name="ID" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/users/$(vars.ID)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_401_users_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\users:application\json:users1-config-201-application\json-FlowTest" description="Verifying functionality of [post:\users:application\json:users1-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="post:\users:application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_users_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\users:application\json:users1-config-401-application\json-FlowTest" description="Verifying functionality of [post:\users:application\json:users1-config-401-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="post:\users:application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_users_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="401" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(401)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 401" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_401_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\users:application\json:users1-config-500-application\json-FlowTest" description="Verifying functionality of [post:\users:application\json:users1-config-500-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="post:\users:application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_users_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_500_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\users:application\json:users1-config-200-application\json-FlowTest" description="Verifying functionality of [put:\users:application\json:users1-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="put:\users:application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_users_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_200_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\users:application\json:users1-config-406-application\json-FlowTest" description="Verifying functionality of [put:\users:application\json:users1-config-406-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="users1-main" />
            <munit:enable-flow-source value="put:\users:application\json:users1-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_users_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="406" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(406)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 406" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_406_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
